apiVersion: appsody.dev/v1beta1
kind: AppsodyApplication
metadata:
  annotations:
    commit.stack.appsody.dev/author: Harish Yayi <yharish991@gmail.com>
    commit.stack.appsody.dev/committer: GitHub <noreply@github.com>
    commit.stack.appsody.dev/contextDir: /incubator/java-spring-boot2
    commit.stack.appsody.dev/date: Wed Apr 15 16:05:23 2020 +0100
    commit.stack.appsody.dev/message: ' java-spring-boot2: add kafka template (#742)'
    image.opencontainers.org/created: "2020-04-26T22:43:56+05:30"
    stack.appsody.dev/authors: Erin Schnabel <schnabel@us.ibm.com>, Ozzy Osborne <ozzy@ca.ibm.com>,
      Richard Trotter <rtrotter@us.ibm.com>, Harish Yayi <hyayi@us.ibm.com>
    stack.appsody.dev/configured: docker.io/appsody/java-spring-boot2:0.3
    stack.appsody.dev/created: "2020-04-15T15:38:49Z"
    stack.appsody.dev/description: Spring Boot using OpenJ9 and Maven
    stack.appsody.dev/documentation: https://github.com/appsody/stacks/tree/master/incubator/java-spring-boot2/README.md
    stack.appsody.dev/licenses: Apache-2.0
    stack.appsody.dev/revision: 516d028cc6fe99e26c0ad0f3f49aca36e8949594
    stack.appsody.dev/source: https://github.com/appsody/stacks/tree/master/incubator/java-spring-boot2/image
    stack.appsody.dev/tag: docker.io/appsody/java-spring-boot2:0.3.29
    stack.appsody.dev/title: Spring BootÂ®
    stack.appsody.dev/url: https://github.com/appsody/stacks/tree/master/incubator/java-spring-boot2
  creationTimestamp: null
  labels:
    image.opencontainers.org/title: dnb-transaction
    stack.appsody.dev/id: java-spring-boot2
    stack.appsody.dev/version: 0.3.29
  name: dnb-transaction-staging
  namespace: cpfa-dnb
spec:
  applicationImage: docker-registry.default.svc:5000/cpfa-dnb/dnb-transaction:v4
  autoscaling:
    maxReplicas: 3
    minReplicas: 1
    targetCPUUtilizationPercentage: 60
  createKnativeService: false
  expose: true
  livenessProbe:
    failureThreshold: 12
    httpGet:
      path: /api/v1/transaction/liveness
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 2
  monitoring:
    endpoints:
    - path: /actuator/prometheus
    labels:
      k8s-app: dnb-transaction
  readinessProbe:
    failureThreshold: 12
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 1
  replicas: 3
  resourceConstraints:
    requests:
      cpu: 75m
  route:
    host: dnb-transaction-staging-cpfa-dnb.mcmhub-demo01-32d7c19d4374c7b6f6308b1ef2de3e3e-0001.us-east.containers.appdomain.cloud
  service:
    annotations:
      prometheus.io/path: /actuator/prometheus
      prometheus.io/scrape: "true"
    port: 8080
    type: NodePort
  stack: java-spring-boot2
  version: 1.0.0
